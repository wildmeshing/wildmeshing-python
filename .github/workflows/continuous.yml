name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CTEST_OUTPUT_ON_FAILURE: ON
  CTEST_PARALLEL_LEVEL: 2

defaults:
  run:
    shell: bash -el {0}

jobs:
  Build:
    name: ${{ matrix.name }} (${{ matrix.config }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macOS-13, windows-2019]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        config: [Debug, Release]
        include:
          - os: ubuntu-22.04
            name: Linux
          - os: windows-2019
            name: Windows
          - os: macos-13
            name: macOS
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 10
          submodules: "recursive"

      - name: Setup NMake (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge
          python-version: ${{ matrix.python-version }}
          channel-priority: true
          activate-environment: test-env

      - name: Install Dependencies
        run: conda install numpy svgwrite cmake git -y

      - name: Install Dependencies  (Windows)
        if: runner.os == 'Windows'
        run: conda install mpir -y

      - name: Envs (Windows)
        if: runner.os == 'Windows'
        run: echo "CMAKE_GENERATOR=NMake Makefiles" >> $GITHUB_ENV

      - name: Configure git
        run: git config --global http.version HTTP/1.1

      - name: Build (Debug)
        if: matrix.config == 'Debug'
        run: python -m pip install -v --debug .

      - name: Build (Release)
        if: matrix.config == 'Release'
        run: python -m pip install -v .

      - name: Fast Tests
        run: |
          python test/tri_test.py
          python test/small_tet_test.py

      - name: Slow Tests
        if: matrix.config == 'Release'
        run: |
          python test/tet_test.py
